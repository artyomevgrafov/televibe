
#Область СлужебныеПроцедурыИФункции
	
&НаСервере
Процедура ЗаписатьПараметрыОтправкиНаСервере()
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Объект.Организация, Объект.token, "Viber_token");
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Объект.Организация, Объект.webhook, "Viber_webhook");
КонецПроцедуры

&НаСервере
Процедура ПолучитьПараметрыОтправкиНаСервере()
	МодульОбъекта     = РеквизитФормыВЗначение("Объект");
	МодульОбъекта.ПолучитьПараметрыОтправки();
	
	ЗначениеВРеквизитФормы(МодульОбъекта, "Объект");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПодписчикиМесенджеров.ID КАК ID,
	               |	ПодписчикиМесенджеров.Контрагент КАК Контрагент
	               |ИЗ
	               |	РегистрСведений.ПодписчикиМесенджеров КАК ПодписчикиМесенджеров
	               |ГДЕ
	               |	ПодписчикиМесенджеров.Мессенджер = ЗНАЧЕНИЕ(Перечисление.Мессенджеры.Viber)";
	
	Подписчики.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателейНаСервере()
	Запрос = Новый Запрос;                 
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПодписчикиViber.ID КАК id,
	               |	ИСТИНА КАК Отправлять,
	               |	"""" КАК СообщениеОбОтправке,
	               |	ПодписчикиViber.Контрагент КАК Контрагент
	               |ИЗ
	               |	РегистрСведений.ПодписчикиМесенджеров КАК ПодписчикиViber
	               |ГДЕ
	               |	ПодписчикиViber.Мессенджер = ЗНАЧЕНИЕ(Перечисление.Мессенджеры.Viber)";
	
	Объект.СписокПолучателей.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры 

&НаСервере
Процедура СохранитьДанныеКонтактовНаСервере()
	НаборЗаписей = РегистрыСведений.ПодписчикиМесенджеров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Мессенджер.Установить(Перечисления.Мессенджеры.Viber);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Для Каждого СтрокаТабличнойЧасти из Подписчики Цикл
		ТекID      = СтрокаТабличнойЧасти.ID;
		ТекКонтакт = СтрокаТабличнойЧасти.Контрагент;
		
		Если ПустаяСтрока(ТекID) или Не ЗначениеЗаполнено(ТекКонтакт) Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ID         = ТекID;
		НоваяЗапись.Контрагент = ТекКонтакт;
		НоваяЗапись.Мессенджер = Перечисления.Мессенджеры.Viber;
	КонецЦикла;	
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
	КонецПопытки;	
КонецПроцедуры

&НаСервере
Функция ОтправитьСообщениеНаСервере(КоличествоОшибок)
	МодульОбъекта     = РеквизитФормыВЗначение("Объект");
	РезультатОтправки = МодульОбъекта.ОтправитьСообщенияПолучателям(КоличествоОшибок);
	
	ЗначениеВРеквизитФормы(МодульОбъекта, "Объект");
	
	Возврат РезультатОтправки;
КонецФункции

&НаСервере
Функция ОтправитьФайлНаСервере(КоличествоОшибок)
	МодульОбъекта     = РеквизитФормыВЗначение("Объект");
	РезультатОтправки = МодульОбъекта.ОтправитьФайлПолучателям(КоличествоОшибок);
	
	ЗначениеВРеквизитФормы(МодульОбъекта, "Объект");
	
	Возврат РезультатОтправки;
КонецФункции

&НаСервере
Процедура УстановитьwebhookНаСервере()
	МодульОбъекта = РеквизитФормыВЗначение("Объект");
	МодульОбъекта.SettingАWebhook();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	ЗапрещеноИзменятьПараметры = (НЕ ЗначениеЗаполнено(Объект.Организация));
	
	Элементы.token.ТолькоПросмотр   = ЗапрещеноИзменятьПараметры;
	Элементы.webhook.ТолькоПросмотр = ЗапрещеноИзменятьПараметры;
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветаИУсловноеОформление()
	ЭлементыУсловногоОформления = УсловноеОформление.Элементы;
	ЭлементыУсловногоОформления.Очистить();
	
	ЭлементОформления = ЭлементыУсловногоОформления.Добавить();
	ЭлементОформления.Представление = "Выделение ошибок при отправке розовым";
	
	ОтборОформления = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборОформления.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.СписокПолучателей.СообщениеОбОтправке");
	ОтборОформления.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборОформления.ПравоеЗначение = "";
	ОтборОформления.Использование  = Истина;
	
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СписокПолучателейКонтрагент");	
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.ТусклоРозовый);  	
	
	ЭлементОформления = ЭлементыУсловногоОформления.Добавить();
	ЭлементОформления.Представление = "Выделение успешных отправок зелёным";
	
	ОтборОформления = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборОформления.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.СписокПолучателей.СообщениеОбОтправке");
	ОтборОформления.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ОтборОформления.ПравоеЗначение = Истина;
	ОтборОформления.Использование  = Истина;
	
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СписокПолучателейКонтрагент");	
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.НейтральноЗеленый);
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Попытка
		Объект.Организация = ЗначениеНастроекПовтИсп.ЗначениеНастройки("ОсновнаяОрганизация");	
	Исключение
	    //ОписаниеОшибки()
	КонецПопытки;
	
	
	ПолучитьПараметрыОтправкиНаСервере();
	
	МодульОбъекта = РеквизитФормыВЗначение("Объект");
	МодульОбъекта.ЗаполнитьСписокАдминистраторов();
	ЗначениеВРеквизитФормы(МодульОбъекта, "Объект");
	
	УстановитьЦветаИУсловноеОформление();
	
	ПрочитатьДиалоги();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Перем ВыбранныйКонтрагент, ВыбранныйID; 
	Если НЕ ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранноеЗначение.Свойство("Контрагент", ВыбранныйКонтрагент);
	ВыбранноеЗначение.Свойство("ID",         ВыбранныйID);
	
	Если НЕ Объект.СписокПолучателей.НайтиСтроки(Новый Структура("ID", ВыбранныйID)).Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Объект.СписокПолучателей.Добавить();
	НоваяСтрока.id         = ВыбранныйID;
	НоваяСтрока.Контрагент = ВыбранныйКонтрагент;
	НоваяСтрока.Отправлять = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ПолучитьПараметрыОтправкиНаСервере();
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьПараметрыОтправки(Команда)
	ЗаписатьПараметрыОтправкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	ОтправитьСообщениеОбщая();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеОбщая()
	Если ПустаяСтрока(Объект.token) Тогда
		Сообщить("token не заполнен!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.webhook) Тогда
		Сообщить("webhook не заполнен!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ТекстСообщения) Тогда
		Сообщить("Текст сообщения не заполнен!");
		Возврат;
	КонецЕсли;
	
	КоличествоОшибок = 0; 	
	Если Не ОтправитьСообщениеНаСервере(КоличествоОшибок) Тогда
		Сообщить("При отправке сообщения возникла ошибка!");
		Возврат;
	КонецЕсли;	
	
	Сообщить("Отправка сообщений завершена!");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьФайл(Команда)
	ОтправитьФайлОбщая();
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьФайлОбщая()
	Если ПустаяСтрока(Объект.token) Тогда
		Сообщить("token не заполнен!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.webhook) Тогда
		Сообщить("webhook не заполнен!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ТекстСообщения) Тогда
		Сообщить("Текст сообщения не заполнен!");
		Возврат;
	КонецЕсли;
	
	КоличествоОшибок = 0; 	
	Если Не ОтправитьФайлНаСервере(КоличествоОшибок) Тогда
		Сообщить("При отправке сообщения возникла ошибка!");
		Возврат;
	КонецЕсли;	
	
	Сообщить("Отправка сообщений завершена!");
КонецПроцедуры


&НаКлиенте
Процедура Установитьwebhook(Команда)
	Если ПустаяСтрока(Объект.webhook) Тогда
		Сообщить("webhook не заполнен!");
		Возврат;
	КонецЕсли;
	
	УстановитьwebhookНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокПодписчиков(Команда)
	ЗаполнитьПолучателейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКонтрагента(Команда)
	ОткрытьФорму("Обработка.ОтправкаСообщенийViber.Форма.ФормаВыбораКонтактов", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеКонтактов(Команда)
	СохранитьДанныеКонтактовНаСервере();
КонецПроцедуры
#КонецОбласти

&НаСервере
Процедура ПрочитатьДиалоги()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ERP_STO_ПерепискиВайбер.Период КАК Дата,
	|	ERP_STO_ПерепискиВайбер.text КАК Сообщение,
	|	ERP_STO_ПерепискиВайбер.КлиентВБазе КАК Контакт
	|ИЗ
	|	РегистрСведений.ERP_STO_ПерепискиВайбер КАК ERP_STO_ПерепискиВайбер
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контакт,
	|	Дата";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Диалоги.Очистить();
	СоответствиеКлиентов = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.Контакт) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Диалоги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если СоответствиеКлиентов.Получить(Выборка.Контакт) = Неопределено Тогда
			СоответствиеКлиентов.Вставить(Выборка.Контакт, 0);
		КонецЕсли;
		СоответствиеКлиентов.Вставить(Выборка.Контакт, СоответствиеКлиентов.Получить(Выборка.Контакт) + 1);
	КонецЦикла; 
	
	Контакты.Очистить();
	Для каждого КЗ Из СоответствиеКлиентов Цикл
		НоваяСтрока = Контакты.Добавить();
		НоваяСтрока.Контакт = КЗ.Ключ;
		НоваяСтрока.КоличествоСообщений = КЗ.Значение;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КонтактыПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.Контакты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивКонтактов = Новый Массив;
	МассивКонтактов.Добавить(ТекДанные.Контакт);
	ЗаполнитьПолучателейИзМассиваКонтрагентовНаСервере(МассивКонтактов);
	
	УстановитьОтборВДиалог(ТекДанные.Контакт);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателейИзМассиваКонтрагентовНаСервере(МассивКонтактов)
	ТекОб = РеквизитФормыВЗначение("Объект");
	ТекОб.ЗаполнитьПолучателейИзМассиваКонтрагентов(МассивКонтактов);
	ЗначениеВРеквизитФормы(ТекОб, "Объект");
КонецПроцедуры


&НаКлиенте
Процедура УстановитьОтборВДиалог(Контакт)
	Элементы.Диалоги.ОтборСтрок = Новый ФиксированнаяСтруктура("Контакт", Контакт);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьОтборВДиалог(Неопределено);
	КонтактыПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьДиалоги(Команда)
	ПрочитатьДиалоги();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьСообщениеВДиалоге(Команда)
	ОтправитьСообщениеОбщая();
	ПрочитатьДиалоги();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьФайл(Команда)
